name: Build
on:
  push:
    branches: main
  pull_request:
    branches: main
  schedule:
    - cron: '0 16 * * *'

permissions:
  contents: read

jobs:
  build:
    if: ${{ github.repository_owner == 'ihub-pub' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Set up JDK 17
        uses: actions/setup-java@v3.11.0
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Chmod
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: build -x test

  test:
    if: ${{ github.event_name == 'schedule' && github.repository_owner == 'ihub-pub' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3.11.0
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Chmod
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: --no-build-cache test -DiHubTest.failFast=true

      - name: Upload Coverage Reports
        if: ${{ github.event_name == 'schedule' && github.repository_owner == 'ihub-pub' }}
        uses: codecov/codecov-action@v3.1.2

      - name: Upload Test Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: tests
          path: |
            */build/reports/tests
          retention-days: 1

  project-matrix:
    if: ${{ github.event_name == 'pull_request' && github.repository_owner == 'ihub-pub' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.name.outputs.test }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - id: name
        name: Project Name Matrix
        run: |
          projects=()
          for file in ./*
          do
          if [[ $file =~ "ihub-" ]]
          then
            projects[${#projects[@]}]=$(basename $file)
          fi
          done
          p=$(IFS=,; echo "${projects[*]}")
          p=${p//,/\",\"}
          echo "test=[\"$p\"]" >> $GITHUB_OUTPUT

  matrix-test:
    runs-on: ubuntu-latest
    needs: project-matrix
    strategy:
      matrix:
        project_name: ${{ fromJson(needs.project-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          ref: main
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3.11.0
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Chmod
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: ${{ matrix.project_name }}:test -DiHubTest.failFast=true

      - name: Upload Test Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.project_name }}-test
          path: |
            */build/reports/tests
          retention-days: 1

  check:
    runs-on: ubuntu-latest
    needs: [ build, matrix-test ]
    steps:
      - name: Check Status
        run: echo "Check Status"

  codacy:
    if: ${{ github.event_name == 'push' && github.repository_owner == 'ihub-pub' }}
    permissions:
      contents: read
      security-events: write
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2.2.12
        with:
          sarif_file: results.sarif

  analysis:
    if: ${{ github.repository_owner == 'ihub-pub' }}
    name: Scorecards analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      actions: read
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3.5.2
        with:
          persist-credentials: false

      - name: "Run analysis"
        uses: ossf/scorecard-action@v2.1.3
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: "Upload artifact"
        uses: actions/upload-artifact@v3.1.2
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@v2.2.12
        with:
          sarif_file: results.sarif

  dependency-review:
    if: ${{ github.event_name == 'pull_request' && github.repository_owner == 'ihub-pub' }}
    permissions:
      contents: read
    name: Dependency Review Scan
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3.5.2
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3.0.4

  validation:
    if: ${{ github.repository_owner == 'ihub-pub' }}
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - uses: gradle/wrapper-validation-action@v1.0.6
