# This file is generated by the 'pub.ihub.plugin' Gradle plugin
name: Build
on:
  push:
    branches: main
  pull_request:
    branches: main
  schedule:
    - cron: '0 16 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Gradle Modules
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build with Gradle
        run: gradle build -x test

      - name: Cleanup Gradle Cache
        # Cleans up the Gradle caches before being cached
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/**/gc.properties

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Gradle Modules
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Test with Gradle (fast)
        if: ${{ github.event_name != 'schedule' }}
        run: gradle test -Dfast.test=true

      - name: Test with Gradle (all)
        if: ${{ github.event_name == 'schedule' }}
        run: gradle test

      - name: Upload Coverage Reports
        if: ${{ github.event_name == 'schedule' && github.repository_owner == 'ihub-pub' }}
        run: |
          bash <(curl -s https://codecov.io/bash)

      - name: Upload Test Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: tests
          path: |
            */build/reports/tests
          retention-days: 1

      - name: Cleanup Gradle Cache
        # Cleans up the Gradle caches before being cached
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/**/gc.properties

  codacy:
    if: ${{ github.event_name == 'pull_request' }}
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@1.1.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
