import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as u,c as p,d as t,e,a as s,w as n,b as l}from"./app-DR86wGH8.js";const h={},b=t("h1",{id:"ihub-test",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#ihub-test","aria-hidden":"true"},"#"),e(" ihub-test")],-1),v=t("div",{class:"hint-container info"},[t("p",{class:"hint-container-title"},"plugin description"),t("p",null,[t("code",null,"ihub-test"),e("plugin configuration test task.")])],-1),m=t("thead",null,[t("tr",null,[t("th",null,"Information"),t("th",null,"Description")])],-1),g=t("tr",null,[t("td",null,"Plugin ID"),t("td",null,[t("code",null,"pub.ihub.plugin.ihub-test")])],-1),_=t("tr",null,[t("td",null,"Plugin Name"),t("td",null,[t("code",null,"Test Plugin")])],-1),k=t("tr",null,[t("td",null,"Plugin Type"),t("td",null,[t("code",null,"Project"),e("[^Project]")])],-1),f=t("tr",null,[t("td",null,"Extension Name"),t("td",null,[t("code",null,"iHubTest")])],-1),x=t("td",null,"Plugin Dependencies",-1),y=t("a",{href:"iHubBom"},"ihub-bom",-1),E={href:"https://docs.gradle.org/current/userguide/test_report_aggregation_plugin.html",target:"_blank",rel:"noopener noreferrer"},T=t("code",null,"main item",-1),P=l('<h2 id="extended-properties" tabindex="-1"><a class="header-anchor" href="#extended-properties" aria-hidden="true">#</a> Extended Properties</h2><table><thead><tr><th>Extension</th><th>Description</th><th>Default</th><th>Ext[^Ext]</th><th>Prj[^Prj]</th><th>Sys[^Sys]</th><th>Env[^Env]</th></tr></thead><tbody><tr><td><code>enabled</code></td><td>Enable Test</td><td><code>true</code></td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>classes</code></td><td>Include test classes (<code>,</code>separated, supported wildcard<code>*</code>)</td><td><code>**/*Test*,**/*FT*,**/*UT*</code></td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>forkEvery</code></td><td>Restart fork process per runx test class</td><td><code>100</code></td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>maxParallelForks</code></td><td>Max startup processes</td><td><code>1</code></td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>runProperties</code></td><td>Attribute<a href="explanation#runproperties">See</a> on task runtime</td><td><code>{System.properties}</code></td><td>✔</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td><code>runIncludePropNames</code></td><td>Running with system property name (<code>,</code>separated, supported wildcard<code>*</code>)<a href="explanation#runincludepropnames">See</a></td><td>❌</td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>runSkippedPropNames</code></td><td>Exclude system property name on runtime (<code>,</code>separated, supported wildcard<code>*</code>)<a href="explanation#runskippedpropnames">See</a></td><td>❌</td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>EnabledLocalProperties</code></td><td>Enable local properties<a href="explanation#enabledlocalproperties">See</a></td><td><code>true</code></td><td>✔</td><td>✔</td><td>❌</td><td>❌</td></tr><tr><td><code>debug</code></td><td>Enable test debugging</td><td><code>false</code></td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>FailFast</code></td><td>Stop testing whenever a test fails</td><td><code>false</code></td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>testFramework</code></td><td>Test Frame</td><td><a href="#%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6">See more</a></td><td>✔</td><td>✔</td><td>❌</td><td>❌</td></tr></tbody></table><h2 id="plugin-installation" tabindex="-1"><a class="header-anchor" href="#plugin-installation" aria-hidden="true">#</a> Plugin Installation</h2>',3),I=t("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[t("pre",{class:"language-kotlin"},[t("code",null,[e("plugins "),t("span",{class:"token punctuation"},"{"),e(`
    `),t("span",{class:"token function"},"id"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string-literal singleline"},[t("span",{class:"token string"},'"pub.ihub.plugin.ihub-test"')]),t("span",{class:"token punctuation"},")"),e(`
`),t("span",{class:"token punctuation"},"}"),e(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),S=t("div",{class:"language-groovy line-numbers-mode","data-ext":"groovy"},[t("pre",{class:"language-groovy"},[t("code",null,[e("plugins "),t("span",{class:"token punctuation"},"{"),e(`
    id `),t("span",{class:"token string"},"'pub.ihub.plugin.ihub-test'"),e(`
`),t("span",{class:"token punctuation"},"}"),e(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),A=t("h2",{id:"configuration-example",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#configuration-example","aria-hidden":"true"},"#"),e(" Configuration Example")],-1),N=t("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[t("pre",{class:"language-kotlin"},[t("code",null,[e("iHubTest "),t("span",{class:"token punctuation"},"{"),e(`
    enabled`),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"set"),t("span",{class:"token punctuation"},"("),t("span",{class:"token boolean"},"true"),t("span",{class:"token punctuation"},")"),e(`
    FailFast`),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"set"),t("span",{class:"token punctuation"},"("),t("span",{class:"token boolean"},"true"),t("span",{class:"token punctuation"},")"),e(`
`),t("span",{class:"token punctuation"},"}"),e(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),j=t("div",{class:"language-groovy line-numbers-mode","data-ext":"groovy"},[t("pre",{class:"language-groovy"},[t("code",null,[e(`iHubTest LO
    enabled `),t("span",{class:"token operator"},"="),e(),t("span",{class:"token boolean"},"true"),e(`
    ailFast `),t("span",{class:"token operator"},"="),e(),t("span",{class:"token boolean"},"true"),e(`
`),t("span",{class:"token punctuation"},"}"),e(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),F=l(`<h2 id="test-frame" tabindex="-1"><a class="header-anchor" href="#test-frame" aria-hidden="true">#</a> Test Frame</h2><div class="hint-container tip"><p class="hint-container-title">Tips</p><ul><li>Testframe dependency configuration currently supports：<code>SPOCK</code>,<code>JUNITA_JUPITER</code>,<code>NONE</code></li><li><code>Groovy</code>environmental default<code>SPOCK</code>,<code>Java</code>environmental default<code>JUNITA_JUPITER</code> ::</li></ul><h3 id="spock" tabindex="-1"><a class="header-anchor" href="#spock" aria-hidden="true">#</a> SPOCK</h3><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>dependencies are
    testImplementation <span class="token string">&#39;org.spockframe: spock-spring&#39;</span>
    testRuntimesOnly <span class="token string">&#39;com.athaydes:spock-reports&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="junit-jupiter" tabindex="-1"><a class="header-anchor" href="#junit-jupiter" aria-hidden="true">#</a> JUNIT_JUPITER</h3><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>Dependencies <span class="token punctuation">{</span>
    testImplementation <span class="token string">&#39;org.junit.jupiter:junit-jupiter&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,2);function w(C,B){const r=i("ExternalLinkIcon"),o=i("CodeTabs");return u(),p("div",null,[b,v,t("table",null,[m,t("tbody",null,[g,_,k,f,t("tr",null,[x,t("td",null,[y,e(","),t("a",E,[e("test-report-agregation"),s(r)]),e("("),T,e(")")])])])]),P,s(o,{id:"350",data:[{id:"Kotlin"},{id:"Groovy"}],"tab-id":"build"},{title0:n(({value:d,isActive:a})=>[e("Kotlin")]),title1:n(({value:d,isActive:a})=>[e("Groovy")]),tab0:n(({value:d,isActive:a})=>[I]),tab1:n(({value:d,isActive:a})=>[S]),_:1}),A,s(o,{id:"361",data:[{id:"Kotlin"},{id:"Groovy"}],"tab-id":"build"},{title0:n(({value:d,isActive:a})=>[e("Kotlin")]),title1:n(({value:d,isActive:a})=>[e("Groovy")]),tab0:n(({value:d,isActive:a})=>[N]),tab1:n(({value:d,isActive:a})=>[j]),_:1}),F])}const U=c(h,[["render",w],["__file","iHubTest.html.vue"]]);export{U as default};
