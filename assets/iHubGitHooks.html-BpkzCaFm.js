import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as d,o as u,c as p,d as n,e,a,w as t,b as i}from"./app-DR86wGH8.js";const h={},k=i('<h1 id="ihub-git-hooks" tabindex="-1"><a class="header-anchor" href="#ihub-git-hooks" aria-hidden="true">#</a> ihub-git-hooks</h1><div class="hint-container info"><p class="hint-container-title">plugin information</p><ul><li><code>ihub-git-hooks</code>Plugins are used to configure GitHooks, available for<code>git</code>operations to configure hook commands like：to check code when submitting code.</li><li>Implement custom hook commands by modifying the git-hooks directory(<code>git config core.hooksPath xxx</code>) without destroying the original hooks.</li></ul></div><table><thead><tr><th>Plugin ID</th><th>Plugin Name</th><th>Plugin Type</th><th>Extension Name</th></tr></thead><tbody><tr><td><code>pub.ihub.plugin.ihub-git-hooks</code></td><td><code>GitHooks Plugin</code></td><td><code>Project</code>[^Project]</td><td><code>iHubGitHooks</code></td></tr></tbody></table>',3),g={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"Submission information check",-1),b={href:"https://www.conventionalcommits.org/",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"commit-msg",-1),f={href:"https://github.com/ihub-pub/plugins/issues/247",target:"_blank",rel:"noopener noreferrer"},x=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;type&gt;[optional scope]: &lt;description&gt;

[opregular body]

[optional footer(s)]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y=i(`<p>The plugin provides a check task<code>commitCheck</code>to check that submissions meet the specifications, using the following：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/cash</span>
./gradlew commitCheck
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>can also be configured by extension attributes, see<a href="#%E6%89%A9%E5%B1%95%E9%85%8D%E7%BD%AEgit-hooks%E5%91%BD%E4%BB%A4">Example</a></p>`,3),_={class:"hint-container tip"},E=n("p",{class:"hint-container-title"},"Tips",-1),A={href:"https://plugins.jetbrains.com/plugin/13389-conventional-commit",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"Conventional Commit",-1),C=n("code",null,"conventionalCommunity.json",-1),w=n("br",null,null,-1),S=i('<h2 id="extended-properties" tabindex="-1"><a class="header-anchor" href="#extended-properties" aria-hidden="true">#</a> Extended Properties</h2><table><thead><tr><th>Extension</th><th>Description</th><th>Default</th><th>Ext[^Ext]</th><th>Prj[^Prj]</th><th>Sys[^Sys]</th><th>Env[^Env]</th></tr></thead><tbody><tr><td><code>hooksPath</code></td><td>Custom hooks path (high priority)</td><td>❌</td><td>✔</td><td>✔</td><td>✔</td><td>❌</td></tr><tr><td><code>hooks</code></td><td>Custom hooks</td><td>❌</td><td>✔</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td><code>descriptionRegex</code></td><td>Submit description regexp</td><td><code>/.{1,100}/</code></td><td>✔</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><div class="hint-container note"><p class="hint-container-title">Note</p><p>If both hooks properties are not configured, use the default hooksdirectory :</p></div><h3 id="dsl-extension-is-supported-below" tabindex="-1"><a class="header-anchor" href="#dsl-extension-is-supported-below" aria-hidden="true">#</a> DSL extension is supported below</h3><table><thead><tr><th>Extended Method</th><th>Extended Description</th></tr></thead><tbody><tr><td><code>Types</code></td><td>Add Submission Type</td></tr><tr><td><code>Type</code></td><td>Add a single submission type to configure<code>type</code>extension properties</td></tr><tr><td><code>Footers</code></td><td>Add FootType</td></tr><tr><td><code>Footer</code></td><td>Add a single Footer type to configure<code>Footer</code>extension properties</td></tr></tbody></table><h3 id="typeextension-properties" tabindex="-1"><a class="header-anchor" href="#typeextension-properties" aria-hidden="true">#</a> <code>type</code>extension properties</h3><table><thead><tr><th>Extended Method</th><th>Extended Description</th></tr></thead><tbody><tr><td><code>Scopes</code></td><td>Add fields</td></tr><tr><td><code>Scope</code></td><td>Add a single field to configure the field<code>description</code>properties</td></tr><tr><td><code>Required Scope</code></td><td>Configuration is enabled for domain checks, default<code>false</code></td></tr><tr><td><code>Description</code></td><td>Submission Type Description</td></tr></tbody></table><h3 id="footerextension-properties" tabindex="-1"><a class="header-anchor" href="#footerextension-properties" aria-hidden="true">#</a> <code>Footer</code>Extension properties</h3><table><thead><tr><th>Extended Method</th><th>Extended Description</th></tr></thead><tbody><tr><td><code>Required</code></td><td>Configure whether the footnote is required and default<code>false</code></td></tr><tr><td><code>RequiredWidth Type</code></td><td>Configure whether the footnote is required for a particular submission type</td></tr><tr><td><code>valueRegex</code></td><td>Footer Value Regular Validation</td></tr><tr><td><code>Description</code></td><td>Footnote description</td></tr></tbody></table><h2 id="plugin-installation" tabindex="-1"><a class="header-anchor" href="#plugin-installation" aria-hidden="true">#</a> Plugin Installation</h2>',10),H=n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[e("plugins "),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"pub.ihub.plugin.ihub-git-hooks"')]),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-groovy line-numbers-mode","data-ext":"groovy"},[n("pre",{class:"language-groovy"},[n("code",null,[e("plugins "),n("span",{class:"token punctuation"},"{"),e(`
    id `),n("span",{class:"token string"},"'pub.ihub.plugin.ihub-git-hooks'"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=i(`<h2 id="example-custom-hooks-path-usage" tabindex="-1"><a class="header-anchor" href="#example-custom-hooks-path-usage" aria-hidden="true">#</a> Example custom hooks path usage</h2><p>Configure custom hooks path and add relevant hooks configuration under custom path</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">iHubGitHooks.hooksPath</span><span class="token punctuation">=</span><span class="token value attr-value">.hooks</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="example-plugin-configuration-usage" tabindex="-1"><a class="header-anchor" href="#example-plugin-configuration-usage" aria-hidden="true">#</a> Example plugin configuration usage</h2><h3 id="extension-configuration-git-hooks-command" tabindex="-1"><a class="header-anchor" href="#extension-configuration-git-hooks-command" aria-hidden="true">#</a> Extension configuration git-hooks command</h3><p>Related hooks commands are configured under<code>.gradle/pub.ihub.plugin.hooks</code></p>`,6),P=n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[e("iHubGitHooks "),n("span",{class:"token punctuation"},"{"),e(`
    hooks`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"mapOf"),n("span",{class:"token punctuation"},"("),e(`
        `),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"pre-commit"')]),e(),n("span",{class:"token keyword"},"to"),e(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"./gradlew build"')]),n("span",{class:"token punctuation"},","),e(`
        `),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"commit-msg"')]),e(),n("span",{class:"token keyword"},"to"),e(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"./gradlew committCheck"')]),e(`
    `),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-groovy line-numbers-mode","data-ext":"groovy"},[n("pre",{class:"language-groovy"},[n("code",null,[e("iHubgitHooks "),n("span",{class:"token punctuation"},"{"),e(`
    hooks `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"["),e(`
        `),n("span",{class:"token string"},"'precommit'"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token string"},"'./gradlew build'"),n("span",{class:"token punctuation"},","),e(`
        `),n("span",{class:"token string"},"'commit-msg'"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token string"},"'./gradlew commitCheck'"),e(`
    `),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=n("h3",{id:"extended-configuration-submission-check",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#extended-configuration-submission-check","aria-hidden":"true"},"#"),e(" Extended Configuration Submission Check")],-1),O=n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{class:"language-kotlin"},[n("code",null,[e(`iHubgitHohoks LO
    `),n("span",{class:"token comment"},"// Add Submission Type"),e(`
    `),n("span",{class:"token function"},"types"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"type1"')]),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"type2"')]),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"type3"')]),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token comment"},"// Open range check"),e(`
    `),n("span",{class:"token function"},"type"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"build"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token function"},"copes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"gradle"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token function"},"equiredScope"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token comment"},"// Footer is required"),e(`
    `),n("span",{class:"token function"},"Footer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"Footer"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token function"},"equired"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token comment"},"// Submission type is feature"),e(`
    `),n("span",{class:"token function"},"Footer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"Footer"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token function"},"equiredWithType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"feat"')]),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token comment"},"// Comment regular value validation"),e(`
    `),n("span",{class:"token function"},"Footer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"Closes"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token function"},"alueRegex"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"\\\\d+"')]),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token comment"},"// Describe configuration 1"),e(`
    `),n("span",{class:"token function"},"type"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"type"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token function"},"cope"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"screen"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"description"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"Scope description"')]),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token function"},"Footer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"Other"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"description"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"Other description"')]),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("div",{class:"language-groovy line-numbers-mode","data-ext":"groovy"},[n("pre",{class:"language-groovy"},[n("code",null,[e(`iHubGitHooks LO
    `),n("span",{class:"token comment"},"// Add Submission Type"),e(`
    types `),n("span",{class:"token string"},"'type1'"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},"'type2'"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},"'type3'"),e(`
    `),n("span",{class:"token comment"},"// Open range checked"),e(`
    Type `),n("span",{class:"token string"},"'build'"),e(" scops "),n("span",{class:"token string"},"'gradle'"),e(" requiredScope "),n("span",{class:"token boolean"},"true"),e(),n("span",{class:"token boolean"},"true"),e(`
    `),n("span",{class:"token comment"},"// Footer is required"),e(`
    Footer' required `),n("span",{class:"token boolean"},"true"),e(`
    `),n("span",{class:"token comment"},"// Fetter 'Footer' requires Footer' type 'feat'"),e(`
    Footer `),n("span",{class:"token string"},"'Footer'"),e(" requiredWithType "),n("span",{class:"token string"},"'feat'"),e(`
    `),n("span",{class:"token comment"},"// Annotate value validity"),e(`
    Footer `),n("span",{class:"token string"},"'Closes'"),e(" valueRegex "),n("span",{class:"token string"},"'\\\\\\d+'"),e(`
    `),n("span",{class:"token comment"},"// Description configuration 1"),e(`
    type `),n("span",{class:"token string"},"'type'"),e(" scope "),n("span",{class:"token string"},"'scope'"),e(" description "),n("span",{class:"token string"},"'Scope'"),e(` description'
    Footer `),n("span",{class:"token string"},"'Other'"),e(" description "),n("span",{class:"token string"},"'Other description'"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function B(I,N){const c=d("ExternalLinkIcon"),l=d("CodeTabs");return u(),p("div",null,[k,n("div",g,[m,n("p",null,[e("Plugins based on"),n("a",b,[e("contractual commit"),a(c)]),e("specifications provide"),v,e("check submissions feature"),n("a",f,[e("for details"),a(c)]),e(", submit information instructions：")]),x]),y,n("div",_,[E,n("p",null,[e("Support auto-generation in IDEA environment"),n("a",A,[F,a(c)]),e("IDEA plugin profile"),C,e("and complete autoconfiguration :"),w,e(" :::")]),S,a(l,{id:"324",data:[{id:"Kotlin"},{id:"Groovy"}],"tab-id":"build"},{title0:t(({value:s,isActive:o})=>[e("Kotlin")]),title1:t(({value:s,isActive:o})=>[e("Groovy")]),tab0:t(({value:s,isActive:o})=>[H]),tab1:t(({value:s,isActive:o})=>[D]),_:1}),T,a(l,{id:"348",data:[{id:"Kotlin"},{id:"Groovy"}],"tab-id":"build"},{title0:t(({value:s,isActive:o})=>[e("Kotlin")]),title1:t(({value:s,isActive:o})=>[e("Groovy")]),tab0:t(({value:s,isActive:o})=>[P]),tab1:t(({value:s,isActive:o})=>[q]),_:1}),G,a(l,{id:"359",data:[{id:"Kotlin"},{id:"Groovy"}],"tab-id":"build"},{title0:t(({value:s,isActive:o})=>[e("Kotlin")]),title1:t(({value:s,isActive:o})=>[e("Groovy")]),tab0:t(({value:s,isActive:o})=>[O]),tab1:t(({value:s,isActive:o})=>[R]),_:1})])])}const V=r(h,[["render",B],["__file","iHubGitHooks.html.vue"]]);export{V as default};
