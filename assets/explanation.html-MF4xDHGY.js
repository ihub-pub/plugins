import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as c,c as d,d as e,e as a,a as t,b as o}from"./app-DR86wGH8.js";const i={},l=o('<h2 id="属性配置说明" tabindex="-1"><a class="header-anchor" href="#属性配置说明" aria-hidden="true">#</a> 属性配置说明</h2><blockquote><p>插件配置属性获取目前支持4种方式：扩展属性-<code>Ext</code>、项目属性-<code>Prj</code>、系统属性-<code>Sys</code>、环境属性-<code>Env</code>，属性优先级：<code>Sys</code> &gt; <code>Env</code> &gt; <code>Ext</code> &gt; <code>Prj</code></p></blockquote><h3 id="ext-extension" tabindex="-1"><a class="header-anchor" href="#ext-extension" aria-hidden="true">#</a> <code>Ext</code>(Extension)</h3>',3),p=e("code",null,"build.gradle",-1),u={href:"https://github.com/ihub-pub/plugins/tree/main/samples",target:"_blank",rel:"noopener noreferrer"},v=o(`<h3 id="prj-project" tabindex="-1"><a class="header-anchor" href="#prj-project" aria-hidden="true">#</a> <code>Prj</code>(Project)</h3><blockquote><p>项目属性，配置于<code>gradle.properties</code>文件，配置格式<code>扩展名</code>.<code>属性名</code>，如<code>iHub.mavenLocalEnabled=true</code>；如果需要通过命令行传递属性，可以使用<code>-P</code>参数，如<code>-PiHub.mavenLocalEnabled=true</code></p></blockquote><h3 id="sys-system" tabindex="-1"><a class="header-anchor" href="#sys-system" aria-hidden="true">#</a> <code>Sys</code>(System)</h3><blockquote><p>系统属性，如命令行传递的信息等，配置格式<code>扩展名</code>.<code>属性名</code>，如<code>-DiHub.mavenLocalEnabled=true</code></p></blockquote><h3 id="env-environment" tabindex="-1"><a class="header-anchor" href="#env-environment" aria-hidden="true">#</a> <code>Env</code>(Environment)</h3><blockquote><p>环境变量属性，配置格式全部大写，多个单词，用<code>_</code>分隔，如<code>MAVEN_LOCAL_ENABLED=true</code></p></blockquote><h2 id="系统属性扩展" tabindex="-1"><a class="header-anchor" href="#系统属性扩展" aria-hidden="true">#</a> 系统属性扩展</h2><blockquote><p>可以给应用程序添加系统属性配置。</p></blockquote><h3 id="runproperties" tabindex="-1"><a class="header-anchor" href="#runproperties" aria-hidden="true">#</a> runProperties</h3><blockquote><p>任务运行时属性：用于配置运行时属性，配置如下：</p></blockquote><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>iHubBoot <span class="token punctuation">{</span>
    runProperties <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;spring.profiles.active&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;dev&#39;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="runincludepropnames" tabindex="-1"><a class="header-anchor" href="#runincludepropnames" aria-hidden="true">#</a> runIncludePropNames</h3><blockquote><p>运行时包含系统属性名称（<code>,</code>分割，支持通配符<code>*</code>）：用于配置指定系统属性，与<a href="explanation#runproperties">runProperties</a>互斥，配置如下：</p></blockquote><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>iHubBoot <span class="token punctuation">{</span>
    runIncludePropNames <span class="token operator">=</span> <span class="token string">&#39;xxx,abc*&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="runskippedpropnames" tabindex="-1"><a class="header-anchor" href="#runskippedpropnames" aria-hidden="true">#</a> runSkippedPropNames</h3><blockquote><p>运行时排除系统属性名称（<code>,</code>分割，支持通配符<code>*</code>）：用于排除系统属性，配置如下：</p></blockquote><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>iHubBoot <span class="token punctuation">{</span>
    runSkippedPropNames <span class="token operator">=</span> <span class="token string">&#39;xxx,abc*&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="enabledlocalproperties" tabindex="-1"><a class="header-anchor" href="#enabledlocalproperties" aria-hidden="true">#</a> enabledLocalProperties</h3><blockquote><p>本地属性：可在项目根目录配置<code>.java-local.properties</code>属性文件，启用属性后会将属性文件中的配置添加的系统配置，配置如下：</p></blockquote><p><code>gradle.properties</code>配置</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>iHubBoot <span class="token punctuation">{</span>
    enabledLocalProperties <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.java-local.properties</code>配置</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token value attr-value">dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>另外属性文件支持<code>.boot-java-local.properties</code>和<code>.test-java-local.properties</code>，分别用于扩展<code>bootRun</code>和<code>test</code>属性，优先级高于<code>.java-local.properties</code></p>`,24);function b(h,m){const n=r("ExternalLinkIcon");return c(),d("div",null,[l,e("blockquote",null,[e("p",null,[a("插件自定义扩展属性，配置于"),p,a("文件，配置方式详见"),e("a",u,[a("samples"),t(n)])])]),v])}const x=s(i,[["render",b],["__file","explanation.html.vue"]]);export{x as default};
